services:
  mysql:
    image: mysql:8.4.6
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init-db-user.sh:/docker-entrypoint-initdb.d/init-db-user.sh
      - db-data:/var/lib/mysql
    networks:
      - ticket-booking-network

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    image: react
    container_name: react
    ports: # for development
      - 5173:5173
    # expose: # for production
    #   - 5173
    env_file:
      - .env
    environment:
      - PUBLIC_URL=/
      - REACT_APP_API_BASE_URL=http://localhost:8080
    networks:
      - ticket-booking-network
    volumes:
      - /app/node_modules # to avoid overwriting node_modules
      - ./frontend:/app # for development (for live changes to be reflected)
      # - ./frontend/dist:/app/dist # for production (build directory)

  inventoryService:
    build:
      context: ./inventoryService
    image: inventory-service-dev
    container_name: inventoryService
    volumes:
      - ./inventoryService:/app
    working_dir: /app
    ports:
      - "8080:8080"
    command: ["mvn", "spring-boot:run"]
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    networks:
      - ticket-booking-network

networks:
  ticket-booking-network:
    driver: bridge

volumes:
  db-data: