spring.application.name=cart-service
server.port=${SERVER_PORT}

# Url of other services
catalog.service.url=http://${CATALOG_BASE_URL}/api/v1/catalog


# Redis configuration
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
logging.level.org.springframework.data.redis=WARN
logging.level.org.springframework.data.redis.core=WARN


# Kafka general configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}

# reduce noisy Kafka metrics logs
logging.level.org.apache.kafka=WARN
logging.level.org.apache.kafka.common.metrics=WARN
logging.level.org.apache.kafka.common.metrics.JmxReporter=WARN

logging.level.org.apache.kafka.clients.producer.ProducerConfig=WARN
logging.level.org.apache.kafka.clients.consumer.ConsumerConfig=WARN

# Kafka configuration (producer)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka configuration (consumer)
spring.kafka.consumer.group-id=cart-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=orderCreationSucceeded:me.doruk.ticketingcommonlibrary.event.OrderCreationSucceeded,orderCreationFailed:me.doruk.ticketingcommonlibrary.event.OrderCreationFailed
